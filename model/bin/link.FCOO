#!/bin/bash
# --------------------------------------------------------------------------- #
# link  : Linker script for use in make (customized for hardware and          #
#         optimization. Note that this script will not be replaced if part    #
#         of WAVEWATCH III is re-installed.                                   #
#                                                                             #
# use   : link name [name ... ]                                               #
#           name: name of source code file without the extension.             #
#                 the first name will become the program name.                #
#                                                                             #
# error codes :  all error output directly to screen.                         #
#                                                                             #
# remarks :                                                                   #
#                                                                             #
#  - Upon (first) installation of WAVEWATCH III the user needs to check the   #
#    existing compilers and options available in the script cmplr.env         #
#                                                                             #
#  - This version is a template for mpt/intel/gnu/pgi with optimized or       #
#    debugging options by adding _debug                                       #
#                                                                             #
#                                                      M. Accensi             #
#                                                      August   2018          #
# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a Check and process input

  if [ "$#" -lt '1' ]
  then
    echo "usage: link name [name]" ; exit 1
  fi
  prog=$1
  echo "      Linking $prog"
  input="$*"

# 1.b Get data from setup file - - - - - - - - - - - - - - - - - - - - - - - - 

  source $(dirname $0)/w3_setenv
  main_dir=$WWATCH3_DIR
  temp_dir=$WWATCH3_TMP
  source=$WWATCH3_SOURCE
  list=$WWATCH3_LIST


# 1.c Initial clean-up - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  rm -f $main_dir/exe/$prog

# --------------------------------------------------------------------------- #
# 2. Check objects                                                            #
# --------------------------------------------------------------------------- #

  cd $main_dir/obj
  objects=$NULL
  error='n'
  set $input

  while [ "$#" -gt '0' ]
  do
    file=$1.o
    if [ -f "$file" ]
    then
      objects="$objects $file"
    else
      echo "      *** file $file not found ***"
      error='y'
    fi
    shift
  done
  if [ "$error" = 'y' ]
  then
    echo "*** Missing object files ***"
    exit 3
  fi

# --------------------------------------------------------------------------- #
# 3. Link                                                                     #
# --------------------------------------------------------------------------- #

# 3.a Build options and determine compiler name - - - - - - - - - - - - - - - -

  # FCOO method using modules, called in scripts $WDIR/howto/mk_{dist,shrd}.txt
  # This will set compiler $FC with options $FFLAGS $FCFLAGS $LDFLAGS $FLIBS
  # mk_shrd.txt also sets NETCDF_CONFIG=/usr/bin/nc-config together with
  # NETCDF_INCDIR, NETCDF_LIBDIR, and WWATCH3_NETCDF
  #
  # > module avail
  # ww3_shel MPI implementation:
  # -- EITHER mvapich2: --
  # > module spider mvapich 2>&1 | egrep 'ifort.*ieee'
  # > module load mpi/mvapich2/2.2/ifort-16.0.3-ieee 
  # -- OR openmpi: --
  # > module spider openmpi 2>&1 | egrep 'ifort.*ieee'
  # > module load mpi/openmpi/1.10.2/ifort-16.0.3-ieee
  # Other ww3 programs, incl. NetCDF pre/postprocessing:
  # > module spider netcdf 2>&1 | egrep 'ifort.*ieee'
  # > module load netcdf-fortran/4.4.4/ifort-16.0.3-ieee

  # compiler
  #   if [ "$mpi_mod" = 'yes' ] ; then
  #     comp='mpiifort'
  #   else
  #     comp='ifort'
  #   fi
  comp=$FC  

  # linking options
  opt="-o $prog -g -O3 -xhost"
  
  # WW3 at FCOO also likes the -ip flag
  # opt="$FFLAGS $FCFLAGS -ip -o $prog -g -O3 -xhost"
  # FCFLAGS at FCOO is '-O3 -xavx -mp1 -fp-model strict -align array128byte'
  opt="$opt $FFLAGS -mp1 -fp-model strict -align array128byte"
  # -xhost probably yields -xavx
  # -mp1 -fp-model strict may slow performance
  # -ip: Try to avoid this. interprocedural (IP) optimizations

  # Libraries
  libs=$FLIBS

  # oasis coupler archive
  if [ "$prog" = 'ww3_shel' ] || [ "$prog" = 'ww3_multi' ] || [ "$prog" = 'ww3_sbs1' ] ||  \
     [ "$prog" = 'ww3_prnc' ] || [ "$prog" = 'ww3_prep' ] || [ "$prog" = 'ww3_prtide' ] || \
     [ "$prog" = 'ww3_gspl' ] ; then
    if [ "$oasis_mod" = 'yes' ] ; then
      if [ -z "$(env | grep OASISDIR)" ] ; then
        echo ''
        echo "[ERROR] OASISDIR is not defined"
        exit 1
      fi
      echo "link with oasis"
      libs="$libs $OASISDIR/lib/libpsmile.MPI1.a $OASISDIR/lib/libmct.a $OASISDIR/lib/libmpeu.a $OASISDIR/lib/libscrip.a"
    fi
  fi

  # grib library
  if [ "$ncep_grib_compile" = 'yes' ]
  then
    opt="$opt -convert big_endian -assume byterecl -prec-div -prec-sqrt -ip"
    libs="$libs ${G2_LIB4} ${W3NCO_LIB4} ${BACIO_LIB4} ${JASPER_LIB} ${PNG_LIB} ${Z_LIB}"
  fi

  # netcdf library dir
  # At FCOO FLIBS from module load netcdf-fortran
  # if [ "$netcdf_compile" = 'yes' ] ; then
  #   if [ "$mpi_mod" = 'no' ]; then comp="`$NETCDF_CONFIG --fc`"; fi
  #   libs="$libs `$NETCDF_CONFIG --flibs` `$NETCDF_CONFIG --libs`"
  # fi
    
  # parmetis library 
  if [ "$prog" = 'ww3_shel' ] || [ "$prog" = 'ww3_multi' ] || [ "$prog" = 'ww3_sbs1' ] ; then
    if [ "$pdlib_mod" = 'yes' ] ; then
      if [ -z "$(env | grep METIS_PATH)" ] ; then
        echo ''
        echo "[ERROR] METIS_PATH is not defined"
        exit 1
      fi
      echo "link with parmetis" 
      libs="$libs $METIS_PATH/lib/libparmetis.a $METIS_PATH/lib/libmetis.a"
    fi
  fi

  # OMP support
  if [ "$omp_mod" = 'yes' ] ; then
    opt="$opt -openmp"
  fi

  opt="$opt $EXTRA_LINK_OPTIONS"

# 3.b Link - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # With FCOO from module load ...,
  rpath=$LDFLAGS
  
  # rprfx="-Wl,-rpath,"
  # rpath=
  # for path in $libs
  # do
  #   if [ "${path:0:2}" = '-L' ]
  #   then
        rpath="$rpath ${rprfx}${path//-L/}"
  #   fi
  # done

  echo "Link command:"
  echo "$comp $opt "'$objects'" $libs"
  echo "with objects='$objects'"
  
  $comp $opt $objects $libs $rpath                  > link.out 2> link.err
  OK="$?"

# --------------------------------------------------------------------------- #
# 4. Postprocessing                                                           #
# --------------------------------------------------------------------------- #

  if [ "$OK" != '0' ]
  then
    echo "      *** error in linking ***"
    echo ' '
    cat link.out
    echo ' '
    cat link.err
    echo ' '
    rm -f link.???
    rm -f $prog
    exit $OK
  else
    if [ ! -f $prog ]
    then
      echo "      *** program $prog not found ***"
      echo ' '
      cat link.out
      echo ' '
      cat link.err
      echo ' '
      rm -f link.???
      exit 1
    else
      mv $prog $main_dir/exe/.
      rm -f link.???
    fi
  fi

# end of link --------------------------------------------------------------- #
