$ -------------------------------------------------------------------- $
$ WAVEWATCH III Grid preprocessor input file                           $
$ -------------------------------------------------------------------- $
$ Grid name (C*30, in quotes)
$
  'GRID GRL9 (Greenland waters)  '
$
$ Frequency increment factor and first frequency (Hz) ---------------- $
$ number of frequencies (wavenumbers) and directions, relative offset
$ of first direction in terms of the directional increment [-0.5,0.5].
$
$ Upper frequency is 0.5398
$   1.1  0.041178  28  24  0.
   1.1  0.030938  31  24  0.
$
$ Set model flags ---------------------------------------------------- $
$  - FLDRY         Dry run (input/output only, no calculation).
$  - FLCX, FLCY    Activate X and Y component of propagation.
$  - FLCTH, FLCK   Activate direction and wavenumber shifts.
$  - FLSOU         Activate source terms.
$
   F T T T F T
$
$ Set time steps ----------------------------------------------------- $
$ - Time step information (this information is always read)
$     maximum global time step, maximum CFL time step for x-y and
$     k-theta, minimum source term time step (all in seconds).
$
$ For f0=0.041178, set:
    600. 300. 300. 10.
$
$ Start of namelist input section ------------------------------------ $
$   Starting with WAVEWATCH III version 2.00, the tunable parameters
$   for source terms, propagation schemes, and numerics are read using
$   namelists. [...]
$
$ Rotated pole ------------------------------------------------------ $
$   Pole  parameters    : Namelist ROTD
$                           PLAT  : Rotated pole latitude
$                           PLON  : Rotated pole longitude
$                           UNROT : Logical, un-rotate directions to true north
$
$    These will be used to derive rotation angle corrections in the
$    model. The corrections are used for rotation of boundary spectra 
$    and for restoring conventional lat/lon orientation of the
$    output spectra, mean direction or any related variables.
$    The PLAT/LON example below is a standard setting for Met
$    Office UK regional models.
$
&ROTD PLAT = 10.0, PLON = -125.0, UNROT = .FALSE. /
$
$ ! CHA at GMOC 20190412:
$ Boundary conditions to nested, rotated pole grids (up to 9 nest[1-9].ww3)
$   Pole  parameters    : Namelist ROTB
$                   BPLAT(1:9)  : Dest. grid rotated pole latitude. Default 90.
$                   BPLON(1:9)  : Rotated pole longitude. Default -180.
$
$ &ROTB BPLAT(1)=10., BPLON(1)=-125., BPLAT(2)=90., BPLON(2)=-180. /
$    
$ Output of 3D arrays------------------------------------------------- $
$ Miscellaneous ------------------------------------------------------ $
$   Misc. parameters    : Namelist MISC
$                           CICE0  : Ice concentration cut-off.
$                           CICEN  : Ice concentration cut-off.
$                           PMOVE  : Power p in GSE aleviation for
$                                    moving grids in Eq. (D.4).
$                           XSEED  : Xseed in seeding alg. (!/SEED).
$                           FLAGTR : Indicating presence and type of
$                                    subgrid information :
$                                     0 : No subgrid information.
$                                     1 : Transparancies at cell boun-
$                                         daries between grid points.
$                                     2 : Transp. at cell centers.
$                                     3 : Like 1 with cont. ice.
$                                     4 : Like 2 with cont. ice.
$ [ ... ]
$ In the 'Out of the box' test setup we run with sub-grid obstacles
$ and with continuous ice treatment.
$
  &XSTO NDP = 5, DSC = 1.0, TYP = 'DoEw' /
$
  &MISC CICE0 = 0.25, CICEN = 0.75, FLAGTR = 4 /
  &FLX3 CDMAX = 3.5E-3 , CTYPE = 0 /
$
$ Mandatory string to identify end of namelist input section.
$
END OF NAMELISTS
$
$ Define grid -------------------------------------------------------- $
$
$ Five records containing :
$
$  1 Type of grid, coordinate system and type of closure: GSTRG, FLAGLL,
$    CSTRG.  Grid closure can only be applied in spherical coordinates.
$      GSTRG  : String indicating type of grid :
$               'RECT'  : rectilinear
$               'CURV'  : curvilinear  
$               'UNST'  : unstructured (triangle-based)
$      FLAGLL : Flag to indicate coordinate system :
$               T  : Spherical (lon/lat in degrees)
$               F  : Cartesian (meters)
$      CSTRG  : String indicating the type of grid index space closure :
$               'NONE'  : No closure is applied
$               'SMPL'  : Simple grid closure : Grid is periodic in the
$                       : i-index and wraps at i=NX+1. In other words,
$                       : (NX+1,J) => (1,J). A grid with simple closure
$                       : may be rectilinear or curvilinear.
$               'TRPL'  : Tripole grid closure : Grid is periodic in the
$                       : i-index and wraps at i=NX+1 and has closure at
$                       : j=NY+1. In other words, (NX+1,J<=NY) => (1,J)
$                       : and (I,NY+1) => (NX-I+1,NY). Tripole
$                       : grid closure requires that NX be even. A grid
$                       : with tripole closure must be curvilinear.
$  2 NX, NY. As the outer grid lines are always defined as land
$    points, the minimum size is 3x3.
$
$ Branch here based on grid type
$
$ IF ( RECTILINEAR GRID ) THEN
$
$  3 Grid increments SX, SY (degr.or m) and scaling (division) factor.
$    If CSTRG='SMPL', then SX is set to 360/NX.
$  4 Coordinates of (1,1) (degr.) and scaling (division) factor.
$
$ ELSE IF ( CURVILINEAR GRID ) THEN
$ [ ... ]
$ END IF
$  5 Limiting bottom depth (m) to discriminate between land and sea
$    points, minimum water depth (m) as allowed in model, unit number
$    of file with bottom depths, scale factor for bottom depths (mult.),
$    IDLA, IDFM, format for formatted read, FROM and filename.
$      IDLA : Layout indicator :
$                  1   : Read line-by-line bottom to top.
$                  2   : Like 1, single read statement.
$                  3   : Read line-by-line top to bottom.
$                  4   : Like 3, single read statement.
$      IDFM : format indicator :
$                  1   : Free format.
$                  2   : Fixed format with above format descriptor.
$                  3   : Unformatted.
$      FROM : file type parameter
$               'UNIT' : open file by unit number only.
$               'NAME' : open file by name and assign to unit.
$
$    If the above unit number equals 10, then the bottom depths are read from
$    this file.  The depths must follow the above record.  No comment lines are
$    allowed within the depth input. In the case of unstructured grids, the file 
$    is expected to be a GMESH grid file containing node and element lists.
$
$ ------------------------------------------------------------------------
     'RECT'  T  'NONE'
       225          187
       150.     150.     1000.
       -3745.     -150.  100.
       0.0 2.5  11  -1. 1 1 '(...)' 'NAME' 'bathy.dat'
$ [...]
$
$ If sub-grid information is available as indicated by FLAGTR above,
$ additional input to define this is needed below. In such cases a
$ field of fractional obstructions at or between grid points needs to
$ be supplied.  First the location and format of the data is defined
$ by (as above) :
$  - Unit number of file (can be 10, and/or identical to bottom depth
$    unit), scale factor for fractional obstruction, IDLA, IDFM,
$    format for formatted read, FROM and filename
$
$
   12 0.0  1 1 '(....)' 'NAME' 'obstruct.dat'
$
$ *** NOTE if this unit number is the same as the previous bottom
$     depth unit number, it is assumed that this is the same file
$     without further checks.                                      ***
$ [...]
$ *** NOTE size of fields is always NX * NY                        ***
$
$ Input boundary points and excluded points -------------------------- $
$    The first line identifies where to get the map data, by unit number
$    IDLA and IDFM, format for formatted read, FROM and filename
$    if FROM = 'PART', then segmented data is read from below, else
$    the data is read from file as with the other inputs (as INTEGER)
$
   10 3 1 '(....)' 'PART' 'mapsta.inp'
$
$ [...]
$
$ Input boundary points from segment data ( FROM = PART ) ------------ $
$   An unlimited number of lines identifying points at which input
$   boundary conditions are to be defined. If the actual input data is
$   not defined in the actual wave model run, the initial conditions
$   will be applied as constant boundary conditions. Each line contains:
$     Discrete grid counters (IX,IY) of the active point and a
$     connect flag. If this flag is true, and the present and previous
$     point are on a grid line or diagonal, all intermediate points
$     are also defined as boundary points.
$
$      2   2   F
$      2  11   T
$
$
$    Mid Atlantic to Labrador (to rotated lon,lat -37.3, 11.1)
$      -37.3  20.4   0.0  -0.15  -63
      2 147 F
      2  84 T
$    Mid Atlantic to Faroe-Iceland Ridge (to -25., -1.35 )
$      -37.3 10.95  0.15 -0.15 82
     84   2 T
$    Norwegian Sea ( to -4., -1.35 )
$      -25. -1.35 0.15 0.0 141
    224   2 T
$    Arctic Ocean (to -4., 13.8)
$      -4. -1.2 0.0 0.15 101
    224 104 T
$    Arctic to Ellesmere ( to -5.65  13.95 )
$      -4.  13.95 -0.15 0.0 12
    213 104 T
$    Lancaster Sound (to -10.6 22.35, then to -10.75 22.35)
$      -10.3  22.05 -0.15  0.15 3
    182 158 F
    180 160 T
$      -10.75 22.35 -0.15  0.0 1
    179 160 T
$    Hudson Bay inlet (to -23.5 26.25 )
$      -21.4 26.25 -0.15 0.0 15
    108 186 F
     94 186 T
$  Close list by defining point (0,0) (mandatory)
$
      0   0   F
$
$ Excluded grid points from segment data ( FROM != PART )
$   First defined as lines, identical to the definition of the input
$   boundary points, and closed the same way.
$
      0   0   F
$
$   Second, define a point in a closed body of sea points to remove
$   the entire body of sea points. Also close by point (0,0)
$
      0   0
$
$ Sedimentary bottom map if namelist &SBT4 SEDMAPD50 = T
$
$     22  1. 1 1 '(f10.6)' 'NAME' 'SED.txt'
$
$ Output boundary points --------------------------------------------- $
$ Output boundary points are defined as a number of straight lines,
$ defined by its starting point (X0,Y0), increments (DX,DY) and number
$ of points. A negative number of points starts a new output file.
$ Note that this data is only generated if requested by the actual
$ program. Example again for spherical grid in degrees. Note, these do
$ not need to be defined for data transfer between grids in the multi
$ grid driver.
$
$     1.75  1.50  0.25 -0.10     3
$     2.25  1.50 -0.10  0.00    -6
$     0.10  0.10  0.10  0.00   -10
$
$  Close list by defining line with 0 points (mandatory)
$
     0.    0.    0.    0.       0
$
$ -------------------------------------------------------------------- $
$ End of input file                                                    $
$ -------------------------------------------------------------------- $
